image:
  distribution: debian
  release: bookworm
  description: |-
    Debian {{ image.release }} {{ image.architecture }}

source:
  downloader: debootstrap
  same_as: gutsy
  url: http://deb.debian.org/debian
  keyserver: keyserver.ubuntu.com
  keys:
  - 0x126C0D24BD8A2942CC7DF8AC7638D0442B90D010
  - 0xA1BD8E9D78F7FE5C3E65D8AF8B48AD6246925553
  - 0x6D33866EDD8FFA41C0143AEDDCC9EFBF77E11517
  - 0x80D15823B7FD1561F9F7BCDDDC30D7C23CBBABEE
  - 0xF8D2585B8783D481

targets:
  lxc:
    create_message: |-
      You just created an {{ image.description }} container.

      To enable SSH, run: apt install openssh-server
      No default root or user password are set by LXC.
    config:
    - type: all
      before: 5
      content: |-
        lxc.include = LXC_TEMPLATE_CONFIG/ubuntu.common.conf

    - type: user
      before: 5
      content: |-
        lxc.include = LXC_TEMPLATE_CONFIG/ubuntu.userns.conf

    - type: all
      after: 4
      content: |-
        lxc.include = LXC_TEMPLATE_CONFIG/common.conf

    - type: user
      after: 4
      content: |-
        lxc.include = LXC_TEMPLATE_CONFIG/userns.conf

    - type: all
      content: |-
        lxc.arch = {{ image.architecture_personality }}

files:
- path: /etc/hostname
  generator: hostname

- path: /etc/hosts
  generator: hosts

- path: /etc/resolvconf/resolv.conf.d/original
  generator: remove

- path: /etc/resolvconf/resolv.conf.d/tail
  generator: remove

- path: /etc/machine-id
  generator: dump

- path: /etc/user/profile
  generator: copy
  source: /etc/profile

- path: /var/lib/dbus/machine-id
  generator: remove

- name: meta-data
  generator: cloud-init
  variants:
  - cloud

- name: network-config
  generator: cloud-init
  variants:
  - cloud

- name: user-data
  generator: cloud-init
  variants:
  - cloud

- name: vendor-data
  generator: cloud-init
  variants:
  - cloud

- path: /etc/systemd/system/tfc-agent.service
  generator: dump
  content: |-
    [Unit]
    Description=Terraform Cloud Agent
    Wants=network-online.target
    After=network-online.target

    [Service]
    User=tfc_agent
    Group=tfc_agent
    WorkingDirectory=/opt/tfc_agent
    EnvironmentFile=/opt/tfc_agent/.env
    ExecStart=/opt/tfc_agent/tfc-agent
    Restart=always
    PassEnvironment=TFC_AGENT_TOKEN TFC_AGENT_NAME

    [Install]
    WantedBy=multi-user.target

packages:
  manager: apt
  update: true
  cleanup: true
  sets:
  - packages:
    - openssh-client
    - gettext-base
    - unzip
    action: install

  - packages:
    - cloud-init
    action: install
    variants:
    - cloud

  repositories:
  - name: sources.list
    url: |-
      deb http://deb.debian.org/debian {{ image.release }} main
      deb http://security.debian.org/debian-security {{ image.release }}-security/updates main
    architectures:
    - x86_64
    - amd64
    - arm64

actions:
- trigger: post-unpack
  action: |-
    #!/bin/sh
    apt install wget ca-certificates -y
    install -d /usr/share/tfc_agent
    wget -O /usr/share/tfc_agent/tfc-agent.zip https://releases.hashicorp.com/tfc-agent/1.14.0/tfc-agent_1.14.0_linux_amd64.zip
  architectures:
    - x86_64
    - amd64

- trigger: post-packages
  action: |-
    #!/bin/sh
    set -eux

    systemctl enable systemd-networkd
  releases:
  - bookworm

- trigger: post-packages
  action: |-
    #!/bin/sh
    set -eux

    useradd -M -r -s /sbin/nologin tfc_agent
    mkhomedir_helper tfc_agent

    mkdir -p /opt/tfc_agent
    unzip /usr/share/tfc_agent/tfc-agent.zip -d /opt/tfc_agent
    rm /usr/share/tfc_agent/tfc-agent.zip

    touch /opt/tfc_agent/.env

    chown -R tfc_agent: /opt/tfc_agent
  releases:
  - bookworm

- trigger: post-packages
  action: |-
    #!/bin/sh
    set -eux

    # Cleanup underlying /run
    mount -o bind / /mnt
    rm -rf /mnt/run/*
    umount /mnt

    # Cleanup temporary shadow paths
    rm /etc/*-

mappings:
  architecture_map: debian